name: Release Please

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-publish:
    name: Build and Publish Release Assets
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created
    permissions:
      contents: write
      packages: write
    env:
      GO_VERSION: "1.25"
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dagger
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and release with GoReleaser
        uses: dagger/dagger-for-github@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          DOCKER_BUILDKIT: 1
        with:
          version: "latest"
          module: "github.com/goreleaser/goreleaser@v2.7.0"
          call: >-
            run
            --context=.
            --args=release,--clean

      # Note: GoReleaser handles release assets and release notes automatically

  security-scan-release:
    name: Security Scan Release Image
    runs-on: ubuntu-latest
    needs: [release-please, build-and-publish]
    if: needs.release-please.outputs.release_created
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dagger
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"

      - name: Scan release container image
        run: |
          dagger -m github.com/jpadams/daggerverse/trivy@v0.6.0 call \
            scan-image \
            --image-ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.release-please.outputs.version }} \
            --severity=HIGH,CRITICAL \
            --format=sarif > trivy-release-results.sarif

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-release-results.sarif

      - name: Display security scan results
        run: |
          dagger -m github.com/jpadams/daggerverse/trivy@v0.6.0 call \
            scan-image \
            --image-ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.release-please.outputs.version }} \
            --severity=HIGH,CRITICAL \
            --format=table