version: 2

project_name: image-gallery

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: image-gallery
    binary: server
    main: ./cmd/server
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .Date }}
      - -X main.builtBy=goreleaser

archives:
  - id: image-gallery
    builds:
      - image-gallery
    name_template: '{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*
      - docs/**/*

dockers:
  - id: image-gallery-amd64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-amd64"
    dockerfile: Dockerfile.goreleaser
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description=Modern Go image gallery application
      - --label=org.opencontainers.image.url=https://github.com/{{ .Env.GITHUB_REPOSITORY }}
      - --label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY }}
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - web/

  - id: image-gallery-arm64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-arm64"
    dockerfile: Dockerfile.goreleaser
    use: buildx
    build_flag_templates:
      - --platform=linux/arm64
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description=Modern Go image gallery application
      - --label=org.opencontainers.image.url=https://github.com/{{ .Env.GITHUB_REPOSITORY }}
      - --label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY }}
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - web/

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-arm64"

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^refactor:"
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .Env.GITHUB_REPOSITORY_NAME }}"
  name_template: "{{ .ProjectName }} {{ .Version }}"
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## {{ .ProjectName }} {{ .Version }}

    **Release Date**: {{ .Date }}
    **Git Commit**: `{{ .ShortCommit }}`

    ### ðŸš€ Installation

    #### Download Binary
    Download the appropriate binary for your platform from the assets below.

    #### Container Images
    ```bash
    # Pull the latest release
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}

    # Run the application
    docker run -p 8080:8080 ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}
    ```

    #### Verify Checksums
    ```bash
    sha256sum -c checksums.txt
    ```

  footer: |
    ### ðŸ“š Documentation

    - [Development Guide](https://github.com/{{ .Env.GITHUB_REPOSITORY }}/blob/{{ .Tag }}/docs/DEVELOPMENT.md)
    - [Release Coordination](https://github.com/{{ .Env.GITHUB_REPOSITORY }}/blob/{{ .Tag }}/docs/RELEASE_COORDINATION.md)

    ---

    **Full Changelog**: https://github.com/{{ .Env.GITHUB_REPOSITORY }}/compare/{{ .PreviousTag }}...{{ .Tag }}

# Disable SCM release (we handle this separately)
scm:
  disable: true