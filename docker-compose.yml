version: '3.8'

# Project name for docker-compose
name: image-gallery

services:
  postgres:
    image: postgres:15-alpine
    container_name: image-gallery-postgres
    environment:
      POSTGRES_DB: image_gallery_test
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./internal/platform/database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d image_gallery_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: image-gallery-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Image Gallery Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: image-gallery-app
    environment:
      - GO_ENV=development
      - PORT=8080
      - HOST=0.0.0.0
      - DATABASE_URL=postgres://testuser:testpass@postgres:5432/image_gallery_test?sslmode=disable
      - STORAGE_ENDPOINT=minio:9000
      - STORAGE_ACCESS_KEY=minioadmin
      - STORAGE_SECRET_KEY=minioadmin
      - STORAGE_BUCKET=images
      - STORAGE_USE_SSL=false
      - STORAGE_REGION=us-east-1
      - CACHE_ENABLED=true
      - CACHE_ADDRESS=valkey:6379
      - CACHE_PASSWORD=
      - CACHE_DATABASE=0
      - CACHE_DEFAULT_TTL=1h
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      valkey:
        condition: service_healthy
    restart: unless-stopped

  # Valkey for caching
  valkey:
    image: valkey/valkey:7-alpine
    container_name: image-gallery-valkey
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    command: valkey-server --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  minio_data:
  valkey_data: